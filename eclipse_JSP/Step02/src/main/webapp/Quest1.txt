q1_divisor.jsp
	숫자 하나 입력 받아서
	서블릿에 입력한 숫자 전송

DivisorServlet
	q1_divisor.jsp에서 보낸 숫자를 받아서
	받은 숫자의 약수 목록 구해서 배열이나 리스트로 저장
	request 영역에 리스트와 보낸 숫자 저장 후 q1_divisor_result.jsp로 이동

q1_divisor_result.jsp
	서블릿에서 저장한 내용을 출력

----------------------------------------------------------------------------------------------

q2_lotto.jsp
	원하는 로또 셋트 개수 숫자 입력 받아서
	서블릿에 입력한 숫자 전송

LottoServlet
	q2_lotto.jsp에서 보낸 숫자를 받아서
	로또번호 생성하여 request영역에 저장한 뒤에
	q2_lotto_result.jsp로 이동

q2_lotto_result.jsp
	서블릿에서 저장한 내용을 읽어와서
	로또번호를 표로 출력
	
----------------------------------------------------------------------------------------------

// q2_lotto.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>로또 번호 생성기</title>
</head>
<body>
    <h2>로또 셋트 개수 입력</h2>
    <form action="lotto.do" method="post">
        <label for="count">원하는 로또 셋트 개수를 입력하세요:</label>
        <input type="number" id="count" name="lotto_count" min="1" required>
        <button type="submit">로또 뽑기!</button>
    </form>
</body>
</html>

----------------------------------------------------------------------------------------------

// LottoServlet.java
package servlet;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Servlet implementation class LottoServlet
 */
@WebServlet("/lotto.do")
public class LottoServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
   
    /**
     * 기본 생성자 - 서블릿 객체가 생성될 때 호출됩니다.
     */
    public LottoServlet() {
        super();
    }

    /**
     * GET 요청을 처리하는 메서드입니다.
     * 클라이언트로부터 요청받은 로또 셋트 개수에 따라 로또 번호를 생성하고 JSP로 전달합니다.
     * @param request  클라이언트의 요청 정보를 담고 있는 HttpServletRequest 객체
     * @param response 서버의 응답 정보를 담고 있는 HttpServletResponse 객체
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // doGet 메서드는 여기서 사용하지 않으므로 POST 요청으로 처리하도록 합니다.
        doPost(request, response);
    }

    /**
     * POST 요청을 처리하는 메서드입니다.
     * 클라이언트로부터 요청받은 로또 셋트 개수에 따라 로또 번호를 생성하고 JSP로 전달합니다.
     * @param request  클라이언트의 요청 정보를 담고 있는 HttpServletRequest 객체
     * @param response 서버의 응답 정보를 담고 있는 HttpServletResponse 객체
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // 클라이언트가 입력한 "lotto_count" 파라미터 값을 가져와서 정수로 변환합니다.
        int lotto_count = Integer.parseInt(request.getParameter("lotto_count"));
        
        // 로또 번호 목록을 저장할 리스트 생성
        List<List<Integer>> lottoSets = new ArrayList<>();
        
        // 사용자가 요청한 개수만큼 로또 번호 생성
        for (int i = 0; i < lotto_count; i++) {
            Set<Integer> lottoNumbers = new HashSet<>();
            while (lottoNumbers.size() < 6) {
                int number = (int) (Math.random() * 45) + 1;
                lottoNumbers.add(number);
            }
            // 생성된 번호를 정렬하여 리스트에 추가
            List<Integer> sortedLottoNumbers = new ArrayList<>(lottoNumbers);
            Collections.sort(sortedLottoNumbers);
            lottoSets.add(sortedLottoNumbers);
        }

        // request 영역에 로또 번호 목록 저장
        request.setAttribute("lottoSets", lottoSets);

        // q2_lotto_result.jsp로 포워딩
        request.getRequestDispatcher("q2_lotto_result.jsp").forward(request, response);
    }
}

----------------------------------------------------------------------------------------------

// q2_lotto_result.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>로또 번호 결과</title>
</head>
<body>
    <h2>로또 번호 결과</h2>
    <table border="1">
        <thead>
            <tr>
                <th>셋트 번호</th>
                <th>로또 번호</th>
            </tr>
        </thead>
        <tbody>
            <!-- request 영역에 저장된 "lottoSets" 속성을 사용하여 로또 번호 목록을 출력합니다. -->
            <c:forEach var="lottoSet" items="${lottoSets}" varStatus="status">
                <tr>
                    <td>셋트 ${status.count}</td>
                    <!-- 각 로또 셋트에 포함된 숫자들을 출력합니다. -->
                    <td>
                        <c:forEach var="number" items="${lottoSet}">
                            ${number} &nbsp;
                        </c:forEach>
                    </td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
</body>
</html>

