<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ page import="dto.UsersDTO"%>
<%@ page import="service.UsersService"%>
<%@ page import="java.time.Instant"%>
<%@ page import="java.time.temporal.ChronoUnit"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>메인 페이지</title>
<style>
body {
	margin: 0;
	padding: 0;
	font-family: Arial, sans-serif;
	display: flex;
	flex-direction: column;
	align-items: center;
}

.navbar {
	width: 100%;
	background-color: #8ED1FC;
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 20px 50px;
}

.menu {
	display: flex;
	gap: 10px; /* 메뉴 항목 간의 간격 */
	width: 60%; /* 메뉴 전체의 너비 */
	justify-content: center; /* 메뉴를 가운데 정렬 */
}

.menu a {
	text-decoration: none;
	color: black;
	background-color: white;
	padding: 5px 5px;
	border-radius: 20px;
	font-size: 1em;
	text-align: center;
	flex: 1; /* 모든 메뉴 항목의 너비를 동일하게 설정 */
	display: flex; /* 메뉴 항목 내용을 가운데 정렬 */
	align-items: center;
	justify-content: center;
}

.menu a:hover {
	background-color: #D3D3D3;
}

.user-icon {
	width: 30px;
	height: 30px;
	background-color: white;
	border-radius: 50%;
	display: flex;
	justify-content: center;
	align-items: center;
	border: 1px solid black;
	cursor: pointer;
	margin-right: 50px;
}

.login-container {
	margin-top: 50px;
	width: 360px;
	background-color: #FFFFFF;
	padding: 40px 30px;
	box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
	border-radius: 10px;
	text-align: center;
}

.login-container h1 {
	font-size: 1.8em;
	margin-bottom: 20px;
	color: #333;
}

.login-container input[type="text"], .login-container input[type="password"]
	{
	width: 100%;
	padding: 10px;
	margin-bottom: 20px;
	border: 1px solid #E0E0E0;
	border-radius: 5px;
	background-color: #F9F9F9;
}

.login-container .remember-me {
	display: flex;
	align-items: center;
	justify-content: start;
	font-size: 0.9em;
	color: #777;
	margin-bottom: 20px;
}

.login-container .remember-me input {
	margin-right: 5px;
}

.login-container button {
	width: 100%;
	padding: 10px;
	background-color: #D3D3D3;
	border: none;
	border-radius: 5px;
	font-size: 1em;
	color: #555;
	cursor: pointer;
}

.login-container button:hover {
	background-color: #C0C0C0;
}

.login-container .links {
	display: flex;
	justify-content: space-between;
	margin-top: 20px;
	font-size: 0.9em;
}

.login-container .links a {
	text-decoration: none;
	color: #888;
	background-color: #E0E0E0;
	padding: 5px 10px;
	border-radius: 20px;
}

.login-container .links a:hover {
	background-color: #D3D3D3;
}

.footer {
	margin-top: 20px;
	text-align: center;
	font-size: 0.9em;
	color: #555;
	background-color: #E0E0E0;
	width: 100%;
	padding: 20px 10px;
}

.footer a {
	text-decoration: none;
	color: #555;
	margin: 0 5px;
}
</style>
</head>
<body>
	<div class="navbar">
		<!-- 메뉴 네비게이션 -->
		<div class="menu">
			<a href="index.jsp">홈</a> <a href="./allBoard.do">게시판</a>
			<a href="./allUser.do">회원 목록</a>
		</div>
		<div class="user-icon">👤</div>
		<!-- 사용자 아이콘 -->
	</div>

<a href="signin.jsp">로그인</a>
	<%
	// 세션 확인
	if (session == null || session.getAttribute("user") == null) {
		System.out.println("[MainPage] 세션이 없거나 사용자 정보가 없음, 쿠키 확인 중");
		// 세션이 없거나 유저 정보가 없을 경우 쿠키를 확인
		Cookie[] cookies = request.getCookies();
		if (cookies != null) {
			for (Cookie cookie : cookies) {
		if ("loginId".equals(cookie.getName())) {
			String loginId = cookie.getValue();
			System.out.println("[MainPage] 쿠키에서 loginId 확인: " + loginId);
			// 데이터베이스에서 사용자 정보 조회
			UsersDTO user = UsersService.getInstance().getUserByLoginId(loginId);
			if (user != null) {
				// 세션 복구
				session = request.getSession();
				session.setAttribute("user", user);
				session.setAttribute("sessionExpireTime", Instant.now().plus(10, ChronoUnit.MINUTES));
				System.out.println("[MainPage] 세션 복구 완료 - 사용자: " + user.getNickName());
			}
			break;
		}
			}
		}
	}

	// 세션 만료 시간 확인
	if (session != null && session.getAttribute("user") != null) {
		Instant sessionExpireTime = (Instant) session.getAttribute("sessionExpireTime");
		if (sessionExpireTime != null && sessionExpireTime.isBefore(Instant.now())) {
			// 세션 만료 처리
			System.out.println("[MainPage] 세션 만료 - 사용자 로그아웃 처리");
			session.invalidate();
			response.sendRedirect("signin.jsp?error=sessionExpired");
			return;
		}
		UsersDTO user = (UsersDTO) session.getAttribute("user");
	%>

	
	<p>
		안녕하세요, <b><%=user.getNickName()%></b> 님!
	</p>
	<form action="logout.do" method="post">
		<button type="submit">로그아웃</button>
	</form>
	<%
	} else {
	System.out.println("[MainPage] 사용자 정보 없음, 로그인 페이지 링크 제공");
	%>
	
	<%
	}
	%>
	
	<div class="footer">
        <a href="#">이용약관</a> | <a href="#">개인정보처리방침</a> | <a href="#">책임의 한계와 법적고지</a> | <a href="#">회원정보 고객센터</a>
        <p>TRIP Copyright © ABCD Corp all right</p>
    </div>
</body>
</html>

<!-- 이 JSP 페이지는 사용자 세션을 확인하고, 세션이 없을 경우 쿠키를 확인하여 사용자를 자동으로 로그인시키려고 시도합니다. -->
<!-- 세션이 유효할 경우 사용자에게 인사말을 표시하고 로그아웃 버튼을 제공합니다. -->
<!-- 세션이 만료되었거나 유효하지 않을 경우 로그인 버튼을 표시하며, 모든 과정에서 로그를 남겨 흐름을 추적할 수 있습니다. -->
